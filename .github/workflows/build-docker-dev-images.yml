name: Build Docker-Dev-Images

on:
  push:
    branches: [development]
  workflow_dispatch:

env:
  VERSION_NUMBER: ${{ github.run_id }}.${{ github.run_number }}

jobs:
  get-version-number:
    runs-on: ubuntu-latest
    outputs:
      version-no: ${{ steps.get_version_number.outputs.version_no }}
    steps:
    - id: get_version_number
      run: echo "version_no=$VERSION_NUMBER" >> $GITHUB_OUTPUT

  build-backend-image-dev:
    runs-on: ubuntu-latest
    needs: get-version-number
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17.0.2
        uses: actions/setup-java@v3
        with:
          java-version: 17.0.2
      - name: Add execution privileges
        run: chmod +x ./mvnw
        working-directory: ./diversity-lunch-be
      - name: Build Backend
        run: ./mvnw package
        working-directory: ./diversity-lunch-be
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Authenticate To ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./diversity-lunch-be
          file: ./diversity-lunch-be/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/brockhaus-ag/backend-image-dev:latest
            ghcr.io/brockhaus-ag/backend-image-dev:${{needs.get-version-number.outputs.version-no}}

  build-frontend-image-dev:
    runs-on: ubuntu-latest
    needs: get-version-number
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Authenticate To ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./diversity-lunch-fe
          file: ./diversity-lunch-fe/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/brockhaus-ag/frontend-image-dev:latest
            ghcr.io/brockhaus-ag/frontend-image-dev:${{needs.get-version-number.outputs.version-no}}

  get-deployments:
    runs-on: ubuntu-latest
    needs: [build-frontend-image-dev, build-backend-image-dev]
    steps:
      - name: Setup SSH
        uses: MrSquaare/ssh-setup-action@v2
        with:
          host: ssh.dev.azure.com
          private-key: ${{ secrets.AZURE_PRIVATE_KEY }}

      - name: Clone repository
        run: git clone git@ssh.dev.azure.com:v3/brockhaus-ag/Diversity-Lunch/Kubernetes

      - name: Upload Backend-Deployment
        uses: actions/upload-artifact@master
        with:
          name: backend_deployment
          path: Kubernetes/azure_dev/backend.yaml

      - name: Upload Frontend-Deployment
        uses: actions/upload-artifact@master
        with:
          name: frontend_deployment
          path: Kubernetes/azure_dev/frontend.yaml

      - name: Delete Repository
        run: rm -rf Kubernetes

  modify-deployments:
    runs-on: ubuntu-latest
    needs: [get-deployments, get-version-number]
    steps:
      - name: Download Frontend-Deployment
        uses: actions/download-artifact@master
        with:
          name: frontend_deployment

      - name: Download Backend-Deployment
        uses: actions/download-artifact@master
        with:
          name: backend_deployment

      - name: Set Container Version Tag
        run: sed -i -- "s%__VERSION_NUMBER__%${{needs.get-version-number.outputs.version-no}}%g" frontend.yaml backend.yaml

      - name: Upload Backend-Deployment
        uses: actions/upload-artifact@master
        with:
          name: backend_deployment
          path: backend.yaml

      - name: Upload Frontend-Deployment
        uses: actions/upload-artifact@master
        with:
          name: frontend_deployment
          path: frontend.yaml

  apply-deployments:
    name: Apply Deployments in Azure
    runs-on: ubuntu-latest
    needs: modify-deployments
    environment: development
    steps:
      - name: Download Frontend-Deployment
        uses: actions/download-artifact@master
        with:
          name: frontend_deployment

      - name: Download Backend-Deployment
        uses: actions/download-artifact@master
        with:
          name: backend_deployment

      - name: Azure login
        id: login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ secrets.resource_group }}'
          cluster-name: '${{ secrets.cluster_name }}'
      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3
      - name: Apply Deployments
        run: |
          kubectl apply -f frontend.yaml
          kubectl apply -f backend.yaml